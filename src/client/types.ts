// src/schema/gen-types.ts
import fs from 'fs/promises';
import { mapPgTypeToTs } from '../tools/type-maps';


export interface ColumnMetadata {
  name: string;
  type: string;
  nullable: boolean;
  is_primary_key: boolean;
  is_foreign_key: boolean;
  references?: {
    schema: string;
    table: string;
    column: string;
  };
}

export interface TableMetadata {
  name: string;
  schema: string;
  columns: ColumnMetadata[];
}

export interface SchemaMetadata {
  name: string;
  tables: Record<string, TableMetadata>;
  // views: Record<string, ApiViewMetadata>;
  // functions: Record<string, ApiFunctionMetadata>;
}

// todo: Make this some more useful... Because I think that I can also create some
// export interface GeneratedTypes {
// 	tables: Record<string, string>;
// 	views: Record<string, string>;
// 	functions: Record<string, string>;
// 	params: Record<string, string>;
// }

export async function generateTypes(metadata: SchemaMetadata[]): Promise<void> {  
	// Generate individual schema files
	await Promise.all(metadata.map(async schema => {
		if (schema) {
			// Generate interface for each table
			let types = Object.values(schema.tables).map(table => {
				const properties = table.columns.map(column => {
					const tsType = mapPgTypeToTs(column.type);
					const optional = column.is_primary_key ? '' : '?';
					return `\t${column.name}${optional}: ${tsType};`;
				});
				return `export interface ${table.name} {\n${properties.join('\n')}\n}`;
			}).join('\n\n');
			// * Create the /gen dir & write the schema types...
			await fs.mkdir('src/gen', { recursive: true });
			await fs.writeFile(`src/gen/types-${schema}.ts`, types);
		}
	}));

  	let indexContent = ['// * Generated by ts-forge',
		'\n// Import schema types',
		...metadata.map(schema => `import * as _${schema.name} from './types-${schema.name}';`),
		'\n// Export all schema types',
		...metadata.map(schema => `export * from './types-${schema.name}';`),
		'\n// Create schemas object',
		'export const schemas = {',
		metadata.map(schema => `\t${schema.name}: _${schema.name}`).join(',\n'),  // Remove spread operator here
		'} as const;',
		'\n// Export type helpers',
		'export type SchemaNames = keyof typeof schemas;',
		'export type SchemaType<T extends SchemaNames> = typeof schemas[T];',
		''
    ].join('\n');
	await fs.writeFile('src/gen/index.ts', indexContent);  // * Gen index.ts
}
